{"version":3,"sources":["components/experiments/DigitsRecognition/cover.png","constants/routes.js","components/shared/Header.js","constants/links.js","constants/theme.js","components/shared/Layout.js","components/shared/ExperimentPreview.js","components/shared/Canvas.js","components/experiments/DigitsRecognition/DigitsRecognition.js","components/experiments/index.js","components/shared/Experiments.js","components/shared/Experiment.js","Routes.js","App.js","index.js"],"names":["module","exports","EXPERIMENT_ROUTE","useStyles","makeStyles","theme","logoTypography","flexGrow","logoLink","color","textDecoration","offset","mixins","toolbar","Header","classes","AppBar","position","Toolbar","Typography","variant","className","noWrap","component","RouterLink","to","Tooltip","title","IconButton","href","createMuiTheme","Layout","props","children","ThemeProvider","CssBaseline","Container","maxWidth","Grid","container","spacing","item","xs","media","height","withRouter","experiment","history","experimentUrl","slug","Card","CardActionArea","onClick","push","CardMedia","image","cover","name","CardContent","gutterBottom","description","defaultProps","width","lineColor","lineWidth","lineJoin","onDrawEnd","canvasImages","Canvas","onDrawEndCallback","canvasRef","useRef","useState","isPainting","setIsPainting","undefined","mousePosition","setMousePosition","getCoordinates","event","current","canvas","x","pageX","offsetLeft","y","pageY","offsetTop","startPaint","useCallback","coordinates","paint","newMousePosition","originalMousePosition","context","getContext","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","drawLine","exitPaint","toBlob","blob","dataURL","toDataURL","useEffect","addEventListener","removeEventListener","ref","paper","recognizedDigit","fontSize","display","justifyContent","alignItems","experiments","DigitsRecognition","setRecognizedDigit","setDigitDataURL","setDigitBlob","Box","flexDirection","Paper","Button","Experiments","experimentsPreviews","Object","keys","forEach","experimentId","key","sm","lg","match","params","unknownExperiment","prototype","hasOwnProperty","call","ExperimentElement","marginTop","Routes","path","exact","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.817f6b85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.3b7e65c0.png\";","export const HOME_ROUTE = '/';\n\nexport const EXPERIMENT_ID_PARAM = 'experiment_id';\nexport const EXPERIMENTS_ROUTE = '/experiments';\nexport const EXPERIMENT_ROUTE = `${EXPERIMENTS_ROUTE}/:${EXPERIMENT_ID_PARAM}`;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialLink from '@material-ui/core/Link';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HomeIcon from '@material-ui/icons/Home';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport { HOME_ROUTE } from '../../constants/routes';\nimport { MACHINE_LEARNING_EXPERIMENTS_GITHUB_URL } from '../../constants/links';\n\nconst useStyles = makeStyles((theme) => ({\n  logoTypography: {\n    flexGrow: 1,\n  },\n  logoLink: {\n    color: 'inherit',\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n  offset: theme.mixins.toolbar,\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.logoTypography} noWrap>\n            <MaterialLink component={RouterLink} to={HOME_ROUTE} className={classes.logoLink}>\n              Machine Learning Experiments\n            </MaterialLink>\n          </Typography>\n\n          <Tooltip title=\"ML Experiments List\">\n            <MaterialLink component={RouterLink} to={HOME_ROUTE} color=\"inherit\">\n              <IconButton color=\"inherit\">\n                <HomeIcon />\n              </IconButton>\n            </MaterialLink>\n          </Tooltip>\n\n          <Tooltip title=\"ML Experiments on GitHub\">\n            <MaterialLink href={MACHINE_LEARNING_EXPERIMENTS_GITHUB_URL} color=\"inherit\">\n              <IconButton color=\"inherit\">\n                <GitHubIcon />\n              </IconButton>\n            </MaterialLink>\n          </Tooltip>\n\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n    </>\n  );\n};\n\nexport default Header;\n","export const MACHINE_LEARNING_EXPERIMENTS_GITHUB_URL = 'https://github.com/trekhleb/machine-learning-experiments';\nexport const MACHINE_LEARNING_EXPERIMENTS_DEMO_URL = 'todo';\n","import { createMuiTheme } from '@material-ui/core/styles';\n// import {red} from '@material-ui/core/colors';\n\n// @see: https://github.com/mui-org/material-ui/blob/master/examples/create-react-app/src/theme.js\nconst theme = createMuiTheme({\n  // palette: {\n  //   primary: {\n  //     main: '#556cd6',\n  //   },\n  //   secondary: {\n  //     main: '#19857b',\n  //   },\n  //   error: {\n  //     main: red.A400,\n  //   },\n  //   background: {\n  //     default: '#fff',\n  //   },\n  // },\n});\n\nexport default theme;\n","import React from 'react';\nimport type { Node } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'typeface-roboto';\n\nimport Header from './Header';\nimport theme from '../../constants/theme';\n\ntype LayoutProps = {\n  children: Node,\n};\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Header />\n          </Grid>\n          <Grid item xs={12}>\n            {children}\n          </Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport type { RouterHistory } from 'react-router-dom';\n\nimport { EXPERIMENTS_ROUTE } from '../../constants/routes';\nimport type { Experiment } from '../experiments/types';\n\nconst useStyles = makeStyles(() => ({\n  media: {\n    height: 200,\n  },\n}));\n\ntype ExperimentPreviewProps = {\n  experiment: Experiment,\n  history: RouterHistory,\n};\n\nconst ExperimentPreview = (props: ExperimentPreviewProps) => {\n  const { experiment, history } = props;\n  const classes = useStyles(props);\n\n  const experimentUrl = `${EXPERIMENTS_ROUTE}/${experiment.slug}`;\n\n  const onExperimentLaunch = () => {\n    history.push(experimentUrl);\n  };\n\n  return (\n    <Card>\n      <CardActionArea onClick={onExperimentLaunch}>\n        <CardMedia image={experiment.cover} title={experiment.name} className={classes.media} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n            {experiment.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {experiment.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default withRouter(ExperimentPreview);\n","import React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nconst defaultProps = {\n  width: 200,\n  height: 200,\n  lineColor: '#000000',\n  lineWidth: 5,\n  lineJoin: 'round',\n  onDrawEnd: canvasImages => {},\n};\n\nexport type CanvasImages = {\n  dataURL: ?string,\n  blob: ?Blob,\n};\n\ntype Coordinate = {\n  x: number,\n  y: number,\n};\n\ntype CanvasProps = {\n  width?: number,\n  height?: number,\n  lineWidth?: number,\n  lineJoin?: string,\n  lineColor?: string,\n  onDrawEnd?: (canvasImages: CanvasImages) => void,\n};\n\n// @see: https://dev.to/ankursheel/react-component-to-fraw-on-a-page-using-hooks-and-typescript-2ahp\nconst Canvas = (props: CanvasProps) => {\n  const {\n    width,\n    height,\n    lineColor,\n    lineWidth,\n    lineJoin,\n    onDrawEnd: onDrawEndCallback,\n  } = props;\n\n  const canvasRef = useRef(null);\n  const [isPainting, setIsPainting] = useState(false);\n  const [mousePosition, setMousePosition] = useState(undefined);\n\n  const onDrawEnd = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const imageFormat = 'image/png';\n    const canvas: HTMLCanvasElement = canvasRef.current;\n\n    canvas.toBlob((blob: Blob) => {\n      onDrawEndCallback({\n        dataURL: canvas.toDataURL(imageFormat),\n        blob,\n      });\n    }, imageFormat);\n  };\n\n  const getCoordinates = (event: MouseEvent): ?Coordinate => {\n    if (!canvasRef.current) {\n      return null;\n    }\n\n    const canvas: HTMLCanvasElement = canvasRef.current;\n\n    return {\n      x: event.pageX - canvas.offsetLeft,\n      y: event.pageY - canvas.offsetTop,\n    };\n  };\n\n  const startPaint = useCallback((event: MouseEvent) => {\n    const coordinates = getCoordinates(event);\n    if (coordinates) {\n      setMousePosition(coordinates);\n      setIsPainting(true);\n    }\n  }, []);\n\n  const drawLine = (originalMousePosition: Coordinate, newMousePosition: Coordinate) => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    const context = canvas.getContext('2d');\n    if (context) {\n      context.strokeStyle = lineColor || defaultProps.lineColor;\n      context.lineJoin = lineJoin || defaultProps.lineJoin;\n      context.lineWidth = lineWidth || defaultProps.lineWidth;\n\n      context.beginPath();\n      context.moveTo(originalMousePosition.x, originalMousePosition.y);\n      context.lineTo(newMousePosition.x, newMousePosition.y);\n      context.closePath();\n\n      context.stroke();\n    }\n  };\n\n  const paint = useCallback(\n    (event: MouseEvent) => {\n      if (isPainting) {\n        const newMousePosition = getCoordinates(event);\n        if (mousePosition && newMousePosition) {\n          drawLine(mousePosition, newMousePosition);\n          setMousePosition(newMousePosition);\n        }\n      }\n    },\n    [isPainting, mousePosition],\n  );\n\n  const exitPaint = useCallback(() => {\n    onDrawEnd();\n    setIsPainting(false);\n    setMousePosition(undefined);\n  }, []);\n\n  // Effect for MouseDown.\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return undefined;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    canvas.addEventListener('mousedown', startPaint);\n    return () => {\n      canvas.removeEventListener('mousedown', startPaint);\n    };\n  }, [startPaint]);\n\n  // Effect for MouseMove.\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return undefined;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    canvas.addEventListener('mousemove', paint);\n    return () => {\n      canvas.removeEventListener('mousemove', paint);\n    };\n  }, [paint]);\n\n  // Effect for MouseUp and MouseLeave.\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return undefined;\n    }\n    const canvas: HTMLCanvasElement = canvasRef.current;\n    canvas.addEventListener('mouseup', exitPaint);\n    canvas.addEventListener('mouseleave', exitPaint);\n    return () => {\n      canvas.removeEventListener('mouseup', exitPaint);\n      canvas.removeEventListener('mouseleave', exitPaint);\n    };\n  }, [exitPaint]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      height={height}\n      width={width}\n    />\n  );\n};\n\nCanvas.defaultProps = defaultProps;\n\nexport default Canvas;\n","import React, {useState} from 'react';\nimport type { Node } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Canvas from '../../shared/Canvas';\nimport type { CanvasImages } from '../../shared/Canvas';\nimport type { Experiment } from '../types';\nimport cover from './cover.png';\n\nconst experimentSlug = 'DigitsRecognition';\nconst experimentName = 'Digits Recognition';\nconst experimentDescription = 'Hand-written digits recognition';\n\nconst canvasWidth = 200;\nconst canvasHeight = 200;\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: canvasWidth,\n    height: canvasHeight\n  },\n  recognizedDigit: {\n    height: '100%',\n    fontSize: '10rem',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nconst DigitsRecognition = (): Node => {\n  const classes = useStyles();\n\n  const [recognizedDigit, setRecognizedDigit] = useState(null);\n  const [digitDataURL, setDigitDataURL] = useState(null);\n  const [digitBlob, setDigitBlob] = useState(null);\n\n  const onDrawEnd = (canvasImages: CanvasImages) => {\n    setDigitDataURL(canvasImages.dataURL);\n    setDigitBlob(canvasImages.blob);\n  };\n\n  const onClearCanvas = () => {\n    setRecognizedDigit(null);\n  };\n\n  const onRecognize = () => {\n    setRecognizedDigit(3);\n  };\n\n  return (\n    <Box flexDirection=\"row\" display=\"flex\">\n      <Paper className={classes.paper}>\n        <Canvas\n          width={canvasWidth}\n          height={canvasHeight}\n          onDrawEnd={onDrawEnd}\n        />  \n      </Paper>\n\n      <Box>\n        <Button onClick={onRecognize}>Recognize</Button>\n        <Button onClick={onClearCanvas}>Clear</Button>\n      </Box>\n\n      <Paper className={classes.paper}>\n        <Box className={classes.recognizedDigit}>\n          {recognizedDigit}\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nconst experiment: Experiment = {\n  slug: experimentSlug,\n  name: experimentName,\n  description: experimentDescription,\n  component: DigitsRecognition,\n  cover,\n};\n\nexport default experiment;\n","import type { ExperimentsMap } from './types';\nimport DigitsRecognition from './DigitsRecognition/DigitsRecognition';\n\nconst experiments: ExperimentsMap = {\n  DigitsRecognition,\n};\n\nexport default experiments;\n","import React from 'react';\nimport type { Node } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ExperimentPreview from './ExperimentPreview';\nimport experiments from '../experiments';\nimport type { Experiment } from '../experiments/types';\n\nconst Experiments = () => {\n  const experimentsPreviews: Node[] = [];\n\n  Object.keys(experiments).forEach((experimentId: string) => {\n    const experiment: Experiment = experiments[experimentId];\n\n    experimentsPreviews.push(\n      <Grid item key={experimentId} xs={12} sm={6} lg={3}>\n        <ExperimentPreview experiment={experiment} />\n      </Grid>,\n    );\n  });\n\n  return (\n    <Grid container spacing={3}>\n      {experimentsPreviews}\n    </Grid>\n  );\n};\n\nexport default Experiments;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport type { Match } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport type { Experiment as ExperimentType } from '../experiments/types';\nimport experiments from '../experiments';\nimport { EXPERIMENT_ID_PARAM } from '../../constants/routes';\n\ntype ExperimentProps = {\n  match: Match,\n};\n\nconst Experiment = (props: ExperimentProps) => {\n  const { match } = props;\n\n  const experimentId: ?string = match.params[EXPERIMENT_ID_PARAM];\n\n  const unknownExperiment = <div>Unknown experiment</div>;\n\n  if (!experimentId) {\n    return unknownExperiment;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(experiments, experimentId)) {\n    return unknownExperiment;\n  }\n\n  const experiment: ExperimentType = experiments[experimentId];\n  const ExperimentElement = experiment.component;\n\n  return (\n    <>\n      <Typography variant=\"h5\">\n        {experiment.name}\n      </Typography>\n      <Typography variant=\"body1\" component=\"p\">\n        {experiment.description}\n      </Typography>\n      <Box marginTop={3}>\n        <ExperimentElement />\n      </Box>\n    </>\n  );\n};\n\nexport default withRouter(Experiment);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { HOME_ROUTE, EXPERIMENT_ROUTE } from './constants/routes';\nimport Experiments from './components/shared/Experiments';\nimport Experiment from './components/shared/Experiment';\n\nconst Routes = () => (\n  <Switch>\n    <Route path={HOME_ROUTE} exact>\n      <Experiments />\n    </Route>\n    <Route path={EXPERIMENT_ROUTE} exact>\n      <Experiment />\n    </Route>\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Layout from './components/shared/Layout';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Routes />\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst rootElement: ?Element = document.getElementById('root');\nif (rootElement != null) {\n  ReactDOM.render(<App />, rootElement);\n}\n"],"sourceRoot":""}